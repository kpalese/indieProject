[DEBUG] 2020-02-28 15:08:47.625 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:08:47.653 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:08:47.686 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:08:48.094 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:08:48.103 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:08:48.736 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:08:49.819 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:08:49.901 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:08:49.903 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:08:49.992 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:08:50.086 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3b920a41
[DEBUG] 2020-02-28 15:08:50.086 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3b920a41
[DEBUG] 2020-02-28 15:08:50.087 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b920a41
[DEBUG] 2020-02-28 15:08:50.087 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4a29d0f7
[DEBUG] 2020-02-28 15:08:50.089 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1401f29a
[DEBUG] 2020-02-28 15:08:50.090 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ba686b3
[DEBUG] 2020-02-28 15:08:50.091 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@d1dda78
[DEBUG] 2020-02-28 15:08:50.091 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@d1dda78
[DEBUG] 2020-02-28 15:08:50.099 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d1dda78
[DEBUG] 2020-02-28 15:08:50.100 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@78795b70
[DEBUG] 2020-02-28 15:08:50.101 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@78795b70
[DEBUG] 2020-02-28 15:08:50.101 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@78795b70
[DEBUG] 2020-02-28 15:08:50.103 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67ade3fe
[DEBUG] 2020-02-28 15:08:50.103 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67ade3fe
[DEBUG] 2020-02-28 15:08:50.104 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67ade3fe
[DEBUG] 2020-02-28 15:08:50.108 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@40359809
[DEBUG] 2020-02-28 15:08:50.109 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@40359809
[DEBUG] 2020-02-28 15:08:50.109 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40359809
[DEBUG] 2020-02-28 15:08:50.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@89cf5cb
[DEBUG] 2020-02-28 15:08:50.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@89cf5cb
[DEBUG] 2020-02-28 15:08:50.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@89cf5cb
[DEBUG] 2020-02-28 15:08:50.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@658dbc90
[DEBUG] 2020-02-28 15:08:50.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@658dbc90
[DEBUG] 2020-02-28 15:08:50.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@658dbc90
[DEBUG] 2020-02-28 15:08:50.114 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36d8a30e
[DEBUG] 2020-02-28 15:08:50.114 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36d8a30e
[DEBUG] 2020-02-28 15:08:50.114 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36d8a30e
[DEBUG] 2020-02-28 15:08:50.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3889354d
[DEBUG] 2020-02-28 15:08:50.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3889354d
[DEBUG] 2020-02-28 15:08:50.117 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d8c008d
[DEBUG] 2020-02-28 15:08:50.117 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d8c008d
[DEBUG] 2020-02-28 15:08:50.118 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@27fbf14b
[DEBUG] 2020-02-28 15:08:50.118 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@27fbf14b
[DEBUG] 2020-02-28 15:08:50.119 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4eaa7241
[DEBUG] 2020-02-28 15:08:50.122 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10d6e052
[DEBUG] 2020-02-28 15:08:50.123 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@55b8705f
[DEBUG] 2020-02-28 15:08:50.123 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55b8705f
[DEBUG] 2020-02-28 15:08:50.124 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2927d6ec
[DEBUG] 2020-02-28 15:08:50.124 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2927d6ec
[DEBUG] 2020-02-28 15:08:50.170 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@24c78183
[DEBUG] 2020-02-28 15:08:50.170 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@24c78183
[DEBUG] 2020-02-28 15:08:50.180 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f7f88e6
[DEBUG] 2020-02-28 15:08:50.180 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f7f88e6
[DEBUG] 2020-02-28 15:08:50.185 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dbc8b79
[DEBUG] 2020-02-28 15:08:50.185 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dbc8b79
[DEBUG] 2020-02-28 15:08:50.186 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c45720e
[DEBUG] 2020-02-28 15:08:50.187 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c45720e
[DEBUG] 2020-02-28 15:08:50.196 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2b20
[DEBUG] 2020-02-28 15:08:50.196 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2b20
[DEBUG] 2020-02-28 15:08:50.200 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7be2ba47
[DEBUG] 2020-02-28 15:08:50.200 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7be2ba47
[DEBUG] 2020-02-28 15:08:50.238 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@66b8339
[DEBUG] 2020-02-28 15:08:50.238 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@66b8339
[DEBUG] 2020-02-28 15:08:50.240 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5125e942
[DEBUG] 2020-02-28 15:08:50.240 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5125e942
[DEBUG] 2020-02-28 15:08:50.261 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2155ae8e
[DEBUG] 2020-02-28 15:08:50.261 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2155ae8e
[DEBUG] 2020-02-28 15:08:50.263 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@406bd3e
[DEBUG] 2020-02-28 15:08:50.264 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@406bd3e
[DEBUG] 2020-02-28 15:08:50.265 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@406bd3e
[DEBUG] 2020-02-28 15:08:50.268 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@502a7134
[DEBUG] 2020-02-28 15:08:50.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@745cf6d9
[DEBUG] 2020-02-28 15:08:50.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@745cf6d9
[DEBUG] 2020-02-28 15:08:50.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@745cf6d9
[DEBUG] 2020-02-28 15:08:50.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@169f6d8d
[DEBUG] 2020-02-28 15:08:50.270 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6169fed3
[DEBUG] 2020-02-28 15:08:50.271 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6169fed3
[DEBUG] 2020-02-28 15:08:50.282 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4eb77564
[DEBUG] 2020-02-28 15:08:50.283 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4eb77564
[DEBUG] 2020-02-28 15:08:50.286 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@207ad317
[DEBUG] 2020-02-28 15:08:50.286 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@207ad317
[DEBUG] 2020-02-28 15:08:50.287 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10f8d1ee
[DEBUG] 2020-02-28 15:08:50.287 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10f8d1ee
[DEBUG] 2020-02-28 15:08:50.293 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@244e63ed
[DEBUG] 2020-02-28 15:08:50.294 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@244e63ed
[DEBUG] 2020-02-28 15:08:50.294 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@59f2f762
[DEBUG] 2020-02-28 15:08:50.297 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7ce0b042
[DEBUG] 2020-02-28 15:08:50.297 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7ce0b042
[DEBUG] 2020-02-28 15:08:50.297 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7ce0b042
[DEBUG] 2020-02-28 15:08:50.299 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e28baff
[DEBUG] 2020-02-28 15:08:50.299 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e28baff
[DEBUG] 2020-02-28 15:08:50.299 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e28baff
[DEBUG] 2020-02-28 15:08:50.305 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6f1bc810
[DEBUG] 2020-02-28 15:08:50.305 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@36ea9eb
[DEBUG] 2020-02-28 15:08:50.306 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1930e2ab
[DEBUG] 2020-02-28 15:08:50.307 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1930e2ab
[DEBUG] 2020-02-28 15:08:50.307 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1930e2ab
[DEBUG] 2020-02-28 15:08:50.308 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@365086d
[DEBUG] 2020-02-28 15:08:50.308 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@365086d
[DEBUG] 2020-02-28 15:08:50.308 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@365086d
[DEBUG] 2020-02-28 15:08:50.309 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@39f444e8
[DEBUG] 2020-02-28 15:08:50.315 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4559165f
[DEBUG] 2020-02-28 15:08:50.327 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a3a811f
[DEBUG] 2020-02-28 15:08:50.327 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a3a811f
[DEBUG] 2020-02-28 15:08:50.328 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5e6ea89d
[DEBUG] 2020-02-28 15:08:50.333 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1d969198
[DEBUG] 2020-02-28 15:08:50.338 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d969198
[DEBUG] 2020-02-28 15:08:50.341 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7f91220c
[DEBUG] 2020-02-28 15:08:50.341 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f91220c
[DEBUG] 2020-02-28 15:08:50.342 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cc5e51a
[DEBUG] 2020-02-28 15:08:50.342 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7688a902
[DEBUG] 2020-02-28 15:08:50.348 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2666dc9
[DEBUG] 2020-02-28 15:08:50.354 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2401c73d
[DEBUG] 2020-02-28 15:08:50.355 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2401c73d
[DEBUG] 2020-02-28 15:08:50.358 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2d22cb41
[DEBUG] 2020-02-28 15:08:50.359 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f73d0d
[DEBUG] 2020-02-28 15:08:50.359 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e245411
[DEBUG] 2020-02-28 15:08:50.359 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ff06294
[DEBUG] 2020-02-28 15:08:50.360 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b3dee8
[DEBUG] 2020-02-28 15:08:50.360 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@38109426
[DEBUG] 2020-02-28 15:08:50.369 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2488dbe9
[DEBUG] 2020-02-28 15:08:50.369 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18d0e92e
[DEBUG] 2020-02-28 15:08:50.420 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:08:50.421 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:08:50.425 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:08:50.430 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:08:50.431 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:08:50.434 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:08:50.436 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:08:50.442 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:08:50.443 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:08:50.444 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:08:50.445 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:08:50.445 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:08:50.445 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:08:50.447 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:08:50.453 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/indieProject
[INFO ] 2020-02-28 15:08:50.453 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:08:50.453 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:08:50.875 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:08:53.404 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:08:53.409 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:08:53.409 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:08:53.562 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-28 15:08:53.637 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:08:53.810 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:08:53.927 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:08:53.945 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@579efea2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@53054fa2]
[DEBUG] 2020-02-28 15:08:54.150 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:54.251 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:08:54.283 [http-nio-8080-exec-1] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:08:54.296 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.User on table USERS
[DEBUG] 2020-02-28 15:08:54.462 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.471 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:08:54.478 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-02-28 15:08:54.488 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:08:54.501 [http-nio-8080-exec-1] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:08:54.509 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:08:54.514 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:08:54.521 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=events, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.525 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.562 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.563 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=events_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.568 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='events_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:08:54.576 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:08:54.577 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:08:54.580 [http-nio-8080-exec-1] CollectionBinder - Collection role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:54.585 [http-nio-8080-exec-1] PropertyBinder - Building property events
[DEBUG] 2020-02-28 15:08:54.585 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.585 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-02-28 15:08:54.585 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userName]
[DEBUG] 2020-02-28 15:08:54.592 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-02-28 15:08:54.592 [http-nio-8080-exec-1] PropertyBinder - Building property userName
[DEBUG] 2020-02-28 15:08:54.595 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.596 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-02-28 15:08:54.596 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userPassword]
[DEBUG] 2020-02-28 15:08:54.596 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-02-28 15:08:54.596 [http-nio-8080-exec-1] PropertyBinder - Building property userPassword
[DEBUG] 2020-02-28 15:08:54.597 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Event
[DEBUG] 2020-02-28 15:08:54.601 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:08:54.601 [http-nio-8080-exec-1] EntityBinder - Import with entity name Event
[DEBUG] 2020-02-28 15:08:54.602 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.Event on table EVENT
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:id]
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:08:54.613 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:date]
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] PropertyBinder - Building property date
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property endTime with lazy=false
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:endTime]
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for endTime
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] PropertyBinder - Building property endTime
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:name]
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:08:54.614 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:notes]
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] PropertyBinder - Building property notes
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property startTime with lazy=false
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:startTime]
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for startTime
[DEBUG] 2020-02-28 15:08:54.616 [http-nio-8080-exec-1] PropertyBinder - Building property startTime
[DEBUG] 2020-02-28 15:08:54.620 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:08:54.621 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:08:54.622 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:08:54.634 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:08:54.634 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for endTime
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2020-02-28 15:08:54.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for startTime
[DEBUG] 2020-02-28 15:08:54.653 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-28 15:08:54.653 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [event]
[DEBUG] 2020-02-28 15:08:54.654 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:54.655 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.events through a foreign key
[DEBUG] 2020-02-28 15:08:54.655 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: edu.matc.entity.User.events -> EVENT
[DEBUG] 2020-02-28 15:08:54.659 [http-nio-8080-exec-1] TableBinder - Retrieving property edu.matc.entity.Event.user
[DEBUG] 2020-02-28 15:08:54.660 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Event
[DEBUG] 2020-02-28 15:08:54.660 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:54.678 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:54.804 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:08:54.805 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:08:54.805 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:08:54.805 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:08:54.805 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:08:54.805 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:08:54.805 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:08:54.806 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:08:54.807 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:08:54.807 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:08:54.811 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:08:54.811 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:08:54.811 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:08:54.811 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:08:54.811 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:08:54.814 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:08:54.814 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:08:54.814 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:08:54.814 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:08:54.814 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:08:54.815 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:08:55.032 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:08:55.113 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:08:55.115 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/indieProject, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@23e70a9d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/indieProject, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:08:55.198 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-28 15:08:55.198 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:55.262 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-28 15:08:55.262 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-28 15:08:55.276 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:08:55.280 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:08:55.281 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@579efea2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ef07af9]
[DEBUG] 2020-02-28 15:08:55.412 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-28 15:08:55.412 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:55.476 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-28 15:08:55.476 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:56.025 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-28 15:08:56.025 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-28 15:08:56.025 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-28 15:08:56.025 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-28 15:08:56.101 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:56.101 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update EVENT set user_id=? where id=?
[DEBUG] 2020-02-28 15:08:56.102 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update EVENT set  where id=?
[DEBUG] 2020-02-28 15:08:56.102 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update EVENT set user_id=null where user_id=? and id=?
[DEBUG] 2020-02-28 15:08:56.102 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update EVENT set user_id=null where user_id=?
[DEBUG] 2020-02-28 15:08:56.110 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-02-28 15:08:56.111 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from USERS where id =?
[DEBUG] 2020-02-28 15:08:56.111 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_name as user_nam2_1_, user_.user_password as user_pas3_1_ from USERS user_ where user_.id=?
[DEBUG] 2020-02-28 15:08:56.111 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into USERS (user_name, user_password, id) values (?, ?, ?)
[DEBUG] 2020-02-28 15:08:56.111 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update USERS set user_name=?, user_password=? where id=?
[DEBUG] 2020-02-28 15:08:56.111 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from USERS where id=?
[DEBUG] 2020-02-28 15:08:56.111 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into USERS (user_name, user_password) values (?, ?)
[DEBUG] 2020-02-28 15:08:56.155 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8fb2c3]
[DEBUG] 2020-02-28 15:08:56.156 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events
[DEBUG] 2020-02-28 15:08:56.162 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41dab8ca]
[DEBUG] 2020-02-28 15:08:56.170 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c74a953]
[DEBUG] 2020-02-28 15:08:56.171 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.date
[DEBUG] 2020-02-28 15:08:56.171 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.endTime
[DEBUG] 2020-02-28 15:08:56.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.name
[DEBUG] 2020-02-28 15:08:56.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.notes
[DEBUG] 2020-02-28 15:08:56.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.startTime
[DEBUG] 2020-02-28 15:08:56.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.user
[DEBUG] 2020-02-28 15:08:56.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : events.user
[DEBUG] 2020-02-28 15:08:56.177 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-28 15:08:56.177 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2020-02-28 15:08:56.177 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:08:56.201 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:08:56.212 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:1>, path=edu.matc.entity.User.events)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:2>, path=edu.matc.entity.User.events.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(events)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.events)
                - SQL table alias mapping - events1_
                - alias suffix - 1_
                - suffixed key columns - {user_id7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Event)
                      - SQL table alias mapping - events1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bad8cfc]
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6073a705]
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67dd7f01]
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.date
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.endTime
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.name
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.notes
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.startTime
[DEBUG] 2020-02-28 15:08:56.216 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : events.user
[DEBUG] 2020-02-28 15:08:56.217 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : events.user
[DEBUG] 2020-02-28 15:08:56.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-28 15:08:56.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2020-02-28 15:08:56.218 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:08:56.218 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:08:56.224 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:1>, path=edu.matc.entity.User.events)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:2>, path=edu.matc.entity.User.events.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(events)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.events)
                - SQL table alias mapping - events1_
                - alias suffix - 1_
                - suffixed key columns - {user_id7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Event)
                      - SQL table alias mapping - events1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-02-28 15:08:56.225 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 15:08:56.247 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.id as id1_1_1_, user0_.user_name as user_nam2_1_1_, user0_.user_password as user_pas3_1_1_, events1_.user_id as user_id7_0_3_, events1_.id as id1_0_3_, events1_.id as id1_0_0_, events1_.date as date2_0_0_, events1_.end_time as end_time3_0_0_, events1_.name as name4_0_0_, events1_.notes as notes5_0_0_, events1_.start_time as start_ti6_0_0_, events1_.user_id as user_id7_0_0_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 15:08:56.247 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.id as id1_1_1_, user0_.user_name as user_nam2_1_1_, user0_.user_password as user_pas3_1_1_, events1_.user_id as user_id7_0_3_, events1_.id as id1_0_3_, events1_.id as id1_0_0_, events1_.date as date2_0_0_, events1_.end_time as end_time3_0_0_, events1_.name as name4_0_0_, events1_.notes as notes5_0_0_, events1_.start_time as start_ti6_0_0_, events1_.user_id as user_id7_0_0_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 15:08:56.248 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Event
[DEBUG] 2020-02-28 15:08:56.248 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from EVENT where id =?
[DEBUG] 2020-02-28 15:08:56.248 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select event_.id, event_.date as date2_0_, event_.end_time as end_time3_0_, event_.name as name4_0_, event_.notes as notes5_0_, event_.start_time as start_ti6_0_, event_.user_id as user_id7_0_ from EVENT event_ where event_.id=?
[DEBUG] 2020-02-28 15:08:56.248 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into EVENT (date, end_time, name, notes, start_time, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:08:56.248 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update EVENT set date=?, end_time=?, name=?, notes=?, start_time=?, user_id=? where id=?
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from EVENT where id=?
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into EVENT (date, end_time, name, notes, start_time, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da74df4]
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:08:56.249 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d62745b]
[DEBUG] 2020-02-28 15:08:56.250 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.events
[DEBUG] 2020-02-28 15:08:56.250 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.events
[DEBUG] 2020-02-28 15:08:56.250 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-28 15:08:56.250 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2020-02-28 15:08:56.250 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:08:56.251 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:08:56.254 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Event)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Event, querySpaceUid=<gen:0>, path=edu.matc.entity.Event)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Event.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-02-28 15:08:56.254 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Event [NONE]: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_, user1_.id as id1_1_1_, user1_.user_name as user_nam2_1_1_, user1_.user_password as user_pas3_1_1_ from EVENT event0_ left outer join USERS user1_ on event0_.user_id=user1_.id where event0_.id=?
[DEBUG] 2020-02-28 15:08:56.254 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e188b60]
[DEBUG] 2020-02-28 15:08:56.254 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-28 15:08:56.254 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-28 15:08:56.255 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:08:56.257 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-28 15:08:56.257 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-28 15:08:56.257 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:08:56.258 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43e2fc9c]
[DEBUG] 2020-02-28 15:08:56.258 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.events
[DEBUG] 2020-02-28 15:08:56.258 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.events
[DEBUG] 2020-02-28 15:08:56.258 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-28 15:08:56.258 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2020-02-28 15:08:56.259 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:08:56.259 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:08:56.260 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Event)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Event, querySpaceUid=<gen:0>, path=edu.matc.entity.Event)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Event.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-02-28 15:08:56.261 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Event [READ]: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_, user1_.id as id1_1_1_, user1_.user_name as user_nam2_1_1_, user1_.user_password as user_pas3_1_1_ from EVENT event0_ left outer join USERS user1_ on event0_.user_id=user1_.id where event0_.id=?
[DEBUG] 2020-02-28 15:08:56.261 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Event: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_ from EVENT event0_ where event0_.id=?
[DEBUG] 2020-02-28 15:08:56.261 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Event: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_ from EVENT event0_ where event0_.id=?
[DEBUG] 2020-02-28 15:08:56.267 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41e4ede8]
[DEBUG] 2020-02-28 15:08:56.268 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111571b1]
[DEBUG] 2020-02-28 15:08:56.268 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-28 15:08:56.270 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-28 15:08:56.274 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:08:56.274 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-28 15:08:56.275 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-28 15:08:56.275 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:08:56.275 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:08:56.275 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:08:56.280 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:08:56.280 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.events)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.events])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.events].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.events)
          - SQL table alias mapping - events0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Event)
                - SQL table alias mapping - events0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-02-28 15:08:56.282 [http-nio-8080-exec-1] CollectionLoader - Static select for collection edu.matc.entity.User.events: select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-28 15:08:56.396 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:08:56.402 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:08:56.402 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:08:56.414 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:08:56.415 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:08:56.428 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:08:56.428 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:08:56.445 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8bde769
[DEBUG] 2020-02-28 15:08:56.447 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: a4e71752-5995-4043-a5ba-fd24256991f7 (<unnamed>)
[DEBUG] 2020-02-28 15:08:56.447 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:08:56.566 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:08:56.619 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-28 15:08:56.660 [http-nio-8080-exec-1] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2b011478
[DEBUG] 2020-02-28 15:08:56.730 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-02-28 15:08:56.750 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:08:56.785 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:08:56.814 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:08:56.837 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-28 15:08:56.840 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-28 15:08:56.843 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:08:56.843 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} USERS user0_ ) )
[DEBUG] 2020-02-28 15:08:56.862 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [USERS user0_]
[DEBUG] 2020-02-28 15:08:56.862 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:08:56.863 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_name as user_nam2_1_, user0_.user_password as user_pas3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}

[DEBUG] 2020-02-28 15:08:56.863 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:08:56.875 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-02-28 15:08:56.875 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.user_name as user_nam2_1_, user0_.user_password as user_pas3_1_ from USERS user0_
[DEBUG] 2020-02-28 15:08:56.875 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:08:56.898 [http-nio-8080-exec-1] SQL - select user0_.id as id1_1_, user0_.user_name as user_nam2_1_, user0_.user_password as user_pas3_1_ from USERS user0_
[DEBUG] 2020-02-28 15:08:57.062 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:08:57.093 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2020-02-28 15:08:57.113 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:08:57.113 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2020-02-28 15:08:57.115 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-02-28 15:08:57.116 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:08:57.116 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.129 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = test
[DEBUG] 2020-02-28 15:08:57.129 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.129 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userPassword` : value = test
[DEBUG] 2020-02-28 15:08:57.129 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = sue
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userPassword` : value = sueserson
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.133 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-02-28 15:08:57.139 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-28 15:08:57.139 [http-nio-8080-exec-1] SQL - select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-28 15:08:57.147 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-28 15:08:57.151 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:57.152 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-28 15:08:57.152 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:57.152 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:08:57.153 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-28 15:08:57.153 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 15:08:57.153 [http-nio-8080-exec-1] SQL - select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-28 15:08:57.161 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 15:08:57.161 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:08:57.166 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 15:08:57.173 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#2]
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `date` : value = 2020-02-29
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `endTime` : value = 10:30
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Meeting with person
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `notes` : value = This is my first example of an Event so I'm entering things just to test it.
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.174 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `startTime` : value = 09:30
[DEBUG] 2020-02-28 15:08:57.175 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.175 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-28 15:08:57.175 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:08:57.175 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#2]
[DEBUG] 2020-02-28 15:08:57.180 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:57.180 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 15:08:57.180 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 15:08:57.180 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:08:57.180 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-28 15:08:57.183 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
