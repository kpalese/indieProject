[DEBUG] 2020-02-28 14:56:09.432 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 14:56:09.453 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 14:56:09.510 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 14:56:09.811 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 14:56:09.818 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 14:56:10.385 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 14:56:11.388 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 14:56:11.444 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 14:56:11.447 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 14:56:11.537 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 14:56:11.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@224da789
[DEBUG] 2020-02-28 14:56:11.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@224da789
[DEBUG] 2020-02-28 14:56:11.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@224da789
[DEBUG] 2020-02-28 14:56:11.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3064dbb2
[DEBUG] 2020-02-28 14:56:11.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d27b544
[DEBUG] 2020-02-28 14:56:11.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5136c75d
[DEBUG] 2020-02-28 14:56:11.674 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19837c1a
[DEBUG] 2020-02-28 14:56:11.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19837c1a
[DEBUG] 2020-02-28 14:56:11.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19837c1a
[DEBUG] 2020-02-28 14:56:11.681 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7d8f8ee
[DEBUG] 2020-02-28 14:56:11.681 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7d8f8ee
[DEBUG] 2020-02-28 14:56:11.681 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d8f8ee
[DEBUG] 2020-02-28 14:56:11.683 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1b6242
[DEBUG] 2020-02-28 14:56:11.683 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1b6242
[DEBUG] 2020-02-28 14:56:11.684 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b6242
[DEBUG] 2020-02-28 14:56:11.685 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@20a0337f
[DEBUG] 2020-02-28 14:56:11.685 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@20a0337f
[DEBUG] 2020-02-28 14:56:11.686 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a0337f
[DEBUG] 2020-02-28 14:56:11.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7a867c25
[DEBUG] 2020-02-28 14:56:11.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7a867c25
[DEBUG] 2020-02-28 14:56:11.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7a867c25
[DEBUG] 2020-02-28 14:56:11.688 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6eb8486a
[DEBUG] 2020-02-28 14:56:11.689 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6eb8486a
[DEBUG] 2020-02-28 14:56:11.689 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6eb8486a
[DEBUG] 2020-02-28 14:56:11.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@410d4e07
[DEBUG] 2020-02-28 14:56:11.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@410d4e07
[DEBUG] 2020-02-28 14:56:11.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@410d4e07
[DEBUG] 2020-02-28 14:56:11.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3fc1c9d8
[DEBUG] 2020-02-28 14:56:11.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3fc1c9d8
[DEBUG] 2020-02-28 14:56:11.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c202133
[DEBUG] 2020-02-28 14:56:11.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c202133
[DEBUG] 2020-02-28 14:56:11.700 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@267b8df8
[DEBUG] 2020-02-28 14:56:11.700 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@267b8df8
[DEBUG] 2020-02-28 14:56:11.704 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b817494
[DEBUG] 2020-02-28 14:56:11.705 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1581ec0c
[DEBUG] 2020-02-28 14:56:11.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6db41cec
[DEBUG] 2020-02-28 14:56:11.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6db41cec
[DEBUG] 2020-02-28 14:56:11.710 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@bbed1d5
[DEBUG] 2020-02-28 14:56:11.710 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@bbed1d5
[DEBUG] 2020-02-28 14:56:11.746 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59650d0b
[DEBUG] 2020-02-28 14:56:11.746 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59650d0b
[DEBUG] 2020-02-28 14:56:11.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c802101
[DEBUG] 2020-02-28 14:56:11.748 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c802101
[DEBUG] 2020-02-28 14:56:11.749 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c14768f
[DEBUG] 2020-02-28 14:56:11.749 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c14768f
[DEBUG] 2020-02-28 14:56:11.751 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a4732e6
[DEBUG] 2020-02-28 14:56:11.751 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a4732e6
[DEBUG] 2020-02-28 14:56:11.763 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@580bba57
[DEBUG] 2020-02-28 14:56:11.763 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@580bba57
[DEBUG] 2020-02-28 14:56:11.766 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5a0eecdf
[DEBUG] 2020-02-28 14:56:11.766 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5a0eecdf
[DEBUG] 2020-02-28 14:56:11.802 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@333c9b5b
[DEBUG] 2020-02-28 14:56:11.802 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@333c9b5b
[DEBUG] 2020-02-28 14:56:11.805 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@17b6844f
[DEBUG] 2020-02-28 14:56:11.805 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17b6844f
[DEBUG] 2020-02-28 14:56:11.836 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@f3ec4af
[DEBUG] 2020-02-28 14:56:11.837 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f3ec4af
[DEBUG] 2020-02-28 14:56:11.841 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@742c7532
[DEBUG] 2020-02-28 14:56:11.842 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@742c7532
[DEBUG] 2020-02-28 14:56:11.842 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@742c7532
[DEBUG] 2020-02-28 14:56:11.844 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b12b743
[DEBUG] 2020-02-28 14:56:11.845 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2fcaad0d
[DEBUG] 2020-02-28 14:56:11.845 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fcaad0d
[DEBUG] 2020-02-28 14:56:11.845 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fcaad0d
[DEBUG] 2020-02-28 14:56:11.846 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@26e2f6ee
[DEBUG] 2020-02-28 14:56:11.849 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@25d2ca70
[DEBUG] 2020-02-28 14:56:11.851 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25d2ca70
[DEBUG] 2020-02-28 14:56:11.854 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@26074130
[DEBUG] 2020-02-28 14:56:11.854 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26074130
[DEBUG] 2020-02-28 14:56:11.859 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5022a596
[DEBUG] 2020-02-28 14:56:11.866 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5022a596
[DEBUG] 2020-02-28 14:56:11.867 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@e856d6b
[DEBUG] 2020-02-28 14:56:11.867 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e856d6b
[DEBUG] 2020-02-28 14:56:11.867 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@ea75104
[DEBUG] 2020-02-28 14:56:11.868 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@ea75104
[DEBUG] 2020-02-28 14:56:11.868 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31626b15
[DEBUG] 2020-02-28 14:56:11.869 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@516d4fad
[DEBUG] 2020-02-28 14:56:11.869 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@516d4fad
[DEBUG] 2020-02-28 14:56:11.869 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@516d4fad
[DEBUG] 2020-02-28 14:56:11.870 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@295880d6
[DEBUG] 2020-02-28 14:56:11.870 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@295880d6
[DEBUG] 2020-02-28 14:56:11.870 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@295880d6
[DEBUG] 2020-02-28 14:56:11.872 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7e0d5dfc
[DEBUG] 2020-02-28 14:56:11.872 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@36bebd28
[DEBUG] 2020-02-28 14:56:11.876 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5327cbe6
[DEBUG] 2020-02-28 14:56:11.877 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5327cbe6
[DEBUG] 2020-02-28 14:56:11.877 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5327cbe6
[DEBUG] 2020-02-28 14:56:11.878 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60da6aea
[DEBUG] 2020-02-28 14:56:11.878 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60da6aea
[DEBUG] 2020-02-28 14:56:11.878 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60da6aea
[DEBUG] 2020-02-28 14:56:11.878 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1a5e85a2
[DEBUG] 2020-02-28 14:56:11.879 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4832263f
[DEBUG] 2020-02-28 14:56:11.918 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@226d3b68
[DEBUG] 2020-02-28 14:56:11.918 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@226d3b68
[DEBUG] 2020-02-28 14:56:11.919 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75fb96ee
[DEBUG] 2020-02-28 14:56:11.921 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7378e297
[DEBUG] 2020-02-28 14:56:11.929 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7378e297
[DEBUG] 2020-02-28 14:56:11.937 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@37b3cb7f
[DEBUG] 2020-02-28 14:56:11.937 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@37b3cb7f
[DEBUG] 2020-02-28 14:56:11.938 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@546a6eb1
[DEBUG] 2020-02-28 14:56:11.938 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d479e42
[DEBUG] 2020-02-28 14:56:11.943 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7bbeb3f5
[DEBUG] 2020-02-28 14:56:11.953 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d1879c6
[DEBUG] 2020-02-28 14:56:11.954 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d1879c6
[DEBUG] 2020-02-28 14:56:11.955 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50e338ef
[DEBUG] 2020-02-28 14:56:11.955 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d8ef201
[DEBUG] 2020-02-28 14:56:11.955 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b99173f
[DEBUG] 2020-02-28 14:56:11.955 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@78e4e2cf
[DEBUG] 2020-02-28 14:56:11.956 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3109897c
[DEBUG] 2020-02-28 14:56:11.956 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b9d7ba6
[DEBUG] 2020-02-28 14:56:11.960 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28aeb305
[DEBUG] 2020-02-28 14:56:11.960 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7703de45
[DEBUG] 2020-02-28 14:56:12.046 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 14:56:12.046 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 14:56:12.051 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 14:56:12.051 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 14:56:12.052 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 14:56:12.053 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 14:56:12.055 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 14:56:12.058 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 14:56:12.059 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 14:56:12.060 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 14:56:12.060 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 14:56:12.060 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 14:56:12.060 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 14:56:12.061 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 14:56:12.069 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/indieProject
[INFO ] 2020-02-28 14:56:12.069 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 14:56:12.069 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 14:56:12.681 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 14:56:15.678 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-28 14:56:15.680 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 14:56:15.680 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 14:56:15.849 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-28 14:56:15.885 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 14:56:16.075 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 14:56:16.201 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 14:56:16.216 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61b3ce6a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2d0b8f0]
[DEBUG] 2020-02-28 14:56:16.535 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:16.765 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 14:56:16.791 [http-nio-8080-exec-3] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 14:56:16.796 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.matc.entity.User on table USERS
[DEBUG] 2020-02-28 14:56:16.902 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:16.921 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 14:56:16.925 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-02-28 14:56:16.935 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 14:56:16.939 [http-nio-8080-exec-3] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 14:56:16.956 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 14:56:16.963 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 14:56:16.968 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=events, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:16.974 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.009 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.010 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=events_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.016 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='events_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 14:56:17.018 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 14:56:17.018 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 14:56:17.019 [http-nio-8080-exec-3] CollectionBinder - Collection role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:17.032 [http-nio-8080-exec-3] PropertyBinder - Building property events
[DEBUG] 2020-02-28 14:56:17.032 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.033 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-02-28 14:56:17.033 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userName]
[DEBUG] 2020-02-28 14:56:17.034 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-02-28 14:56:17.034 [http-nio-8080-exec-3] PropertyBinder - Building property userName
[DEBUG] 2020-02-28 14:56:17.034 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.034 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-02-28 14:56:17.035 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userPassword]
[DEBUG] 2020-02-28 14:56:17.035 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-02-28 14:56:17.035 [http-nio-8080-exec-3] PropertyBinder - Building property userPassword
[DEBUG] 2020-02-28 14:56:17.040 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Event
[DEBUG] 2020-02-28 14:56:17.043 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 14:56:17.043 [http-nio-8080-exec-3] EntityBinder - Import with entity name Event
[DEBUG] 2020-02-28 14:56:17.043 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.matc.entity.Event on table EVENT
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:id]
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:date]
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] PropertyBinder - Building property date
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.051 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property endTime with lazy=false
[DEBUG] 2020-02-28 14:56:17.052 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:endTime]
[DEBUG] 2020-02-28 14:56:17.052 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for endTime
[DEBUG] 2020-02-28 14:56:17.052 [http-nio-8080-exec-3] PropertyBinder - Building property endTime
[DEBUG] 2020-02-28 14:56:17.052 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.055 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 14:56:17.055 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:name]
[DEBUG] 2020-02-28 14:56:17.055 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 14:56:17.055 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2020-02-28 14:56:17.055 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.058 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2020-02-28 14:56:17.058 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:notes]
[DEBUG] 2020-02-28 14:56:17.059 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2020-02-28 14:56:17.059 [http-nio-8080-exec-3] PropertyBinder - Building property notes
[DEBUG] 2020-02-28 14:56:17.059 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.061 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property startTime with lazy=false
[DEBUG] 2020-02-28 14:56:17.062 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:startTime]
[DEBUG] 2020-02-28 14:56:17.065 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for startTime
[DEBUG] 2020-02-28 14:56:17.065 [http-nio-8080-exec-3] PropertyBinder - Building property startTime
[DEBUG] 2020-02-28 14:56:17.065 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 14:56:17.066 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 14:56:17.070 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-02-28 14:56:17.080 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 14:56:17.083 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-02-28 14:56:17.083 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-02-28 14:56:17.084 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-28 14:56:17.084 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2020-02-28 14:56:17.084 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for endTime
[DEBUG] 2020-02-28 14:56:17.084 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 14:56:17.084 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2020-02-28 14:56:17.084 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for startTime
[DEBUG] 2020-02-28 14:56:17.102 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-28 14:56:17.103 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [event]
[DEBUG] 2020-02-28 14:56:17.103 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:17.104 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.events through a foreign key
[DEBUG] 2020-02-28 14:56:17.107 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: edu.matc.entity.User.events -> EVENT
[DEBUG] 2020-02-28 14:56:17.111 [http-nio-8080-exec-3] TableBinder - Retrieving property edu.matc.entity.Event.user
[DEBUG] 2020-02-28 14:56:17.111 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Event
[DEBUG] 2020-02-28 14:56:17.111 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:17.128 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:17.275 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 14:56:17.277 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 14:56:17.279 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 14:56:17.279 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 14:56:17.279 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 14:56:17.280 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 14:56:17.280 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 14:56:17.280 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 14:56:17.280 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 14:56:17.280 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 14:56:17.280 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 14:56:17.285 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 14:56:17.286 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 14:56:17.288 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 14:56:17.289 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 14:56:17.290 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 14:56:17.519 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 14:56:17.609 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 14:56:17.610 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/indieProject, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_indieproject_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b38e961, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/indieProject, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 14:56:17.719 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-28 14:56:17.719 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:17.799 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-28 14:56:17.799 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-28 14:56:17.810 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 14:56:17.816 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 14:56:17.816 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61b3ce6a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@43a3fdcb]
[DEBUG] 2020-02-28 14:56:17.961 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-28 14:56:17.961 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:18.003 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-28 14:56:18.003 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:18.811 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-28 14:56:18.811 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-28 14:56:18.812 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-28 14:56:18.812 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-28 14:56:18.884 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:18.888 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update EVENT set user_id=? where id=?
[DEBUG] 2020-02-28 14:56:18.888 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update EVENT set  where id=?
[DEBUG] 2020-02-28 14:56:18.888 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update EVENT set user_id=null where user_id=? and id=?
[DEBUG] 2020-02-28 14:56:18.888 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update EVENT set user_id=null where user_id=?
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from USERS where id =?
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_name as user_nam2_1_, user_.user_password as user_pas3_1_ from USERS user_ where user_.id=?
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into USERS (user_name, user_password, id) values (?, ?, ?)
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update USERS set user_name=?, user_password=? where id=?
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from USERS where id=?
[DEBUG] 2020-02-28 14:56:18.903 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into USERS (user_name, user_password) values (?, ?)
[DEBUG] 2020-02-28 14:56:18.956 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56642157]
[DEBUG] 2020-02-28 14:56:18.961 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events
[DEBUG] 2020-02-28 14:56:18.972 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54570a29]
[DEBUG] 2020-02-28 14:56:18.975 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60299444]
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.date
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.endTime
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.name
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.notes
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.startTime
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.user
[DEBUG] 2020-02-28 14:56:18.976 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : events.user
[DEBUG] 2020-02-28 14:56:18.977 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-28 14:56:18.977 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2020-02-28 14:56:18.977 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 14:56:19.006 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 14:56:19.013 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:1>, path=edu.matc.entity.User.events)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:2>, path=edu.matc.entity.User.events.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(events)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.events)
                - SQL table alias mapping - events1_
                - alias suffix - 1_
                - suffixed key columns - {user_id7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Event)
                      - SQL table alias mapping - events1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-02-28 14:56:19.018 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4df3b10a]
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54503ec7]
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a447bee]
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.date
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.endTime
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.name
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.notes
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.startTime
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : events.user
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : events.user
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-28 14:56:19.019 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2020-02-28 14:56:19.020 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 14:56:19.020 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 14:56:19.021 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:1>, path=edu.matc.entity.User.events)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:2>, path=edu.matc.entity.User.events.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(events)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.events)
                - SQL table alias mapping - events1_
                - alias suffix - 1_
                - suffixed key columns - {user_id7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Event)
                      - SQL table alias mapping - events1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-02-28 14:56:19.022 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 14:56:19.048 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.id as id1_1_1_, user0_.user_name as user_nam2_1_1_, user0_.user_password as user_pas3_1_1_, events1_.user_id as user_id7_0_3_, events1_.id as id1_0_3_, events1_.id as id1_0_0_, events1_.date as date2_0_0_, events1_.end_time as end_time3_0_0_, events1_.name as name4_0_0_, events1_.notes as notes5_0_0_, events1_.start_time as start_ti6_0_0_, events1_.user_id as user_id7_0_0_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 14:56:19.048 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.id as id1_1_1_, user0_.user_name as user_nam2_1_1_, user0_.user_password as user_pas3_1_1_, events1_.user_id as user_id7_0_3_, events1_.id as id1_0_3_, events1_.id as id1_0_0_, events1_.date as date2_0_0_, events1_.end_time as end_time3_0_0_, events1_.name as name4_0_0_, events1_.notes as notes5_0_0_, events1_.start_time as start_ti6_0_0_, events1_.user_id as user_id7_0_0_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-28 14:56:19.050 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Event
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from EVENT where id =?
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select event_.id, event_.date as date2_0_, event_.end_time as end_time3_0_, event_.name as name4_0_, event_.notes as notes5_0_, event_.start_time as start_ti6_0_, event_.user_id as user_id7_0_ from EVENT event_ where event_.id=?
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into EVENT (date, end_time, name, notes, start_time, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update EVENT set date=?, end_time=?, name=?, notes=?, start_time=?, user_id=? where id=?
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from EVENT where id=?
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into EVENT (date, end_time, name, notes, start_time, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f427d8d]
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-28 14:56:19.051 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 14:56:19.052 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-28 14:56:19.052 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-28 14:56:19.052 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 14:56:19.052 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3810e]
[DEBUG] 2020-02-28 14:56:19.053 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.events
[DEBUG] 2020-02-28 14:56:19.053 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.events
[DEBUG] 2020-02-28 14:56:19.053 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-28 14:56:19.053 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2020-02-28 14:56:19.053 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 14:56:19.053 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 14:56:19.054 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Event)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Event, querySpaceUid=<gen:0>, path=edu.matc.entity.Event)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Event.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-02-28 14:56:19.054 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.Event [NONE]: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_, user1_.id as id1_1_1_, user1_.user_name as user_nam2_1_1_, user1_.user_password as user_pas3_1_1_ from EVENT event0_ left outer join USERS user1_ on event0_.user_id=user1_.id where event0_.id=?
[DEBUG] 2020-02-28 14:56:19.055 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db37041]
[DEBUG] 2020-02-28 14:56:19.055 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-28 14:56:19.055 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e2848e8]
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.events
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.events
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-28 14:56:19.056 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2020-02-28 14:56:19.057 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 14:56:19.057 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 14:56:19.057 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Event)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Event, querySpaceUid=<gen:0>, path=edu.matc.entity.Event)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Event.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-02-28 14:56:19.057 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.Event [READ]: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_, user1_.id as id1_1_1_, user1_.user_name as user_nam2_1_1_, user1_.user_password as user_pas3_1_1_ from EVENT event0_ left outer join USERS user1_ on event0_.user_id=user1_.id where event0_.id=?
[DEBUG] 2020-02-28 14:56:19.058 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Event: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_ from EVENT event0_ where event0_.id=?
[DEBUG] 2020-02-28 14:56:19.058 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Event: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_ from EVENT event0_ where event0_.id=?
[DEBUG] 2020-02-28 14:56:19.064 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@663863b0]
[DEBUG] 2020-02-28 14:56:19.069 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752a2bae]
[DEBUG] 2020-02-28 14:56:19.069 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 14:56:19.070 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 14:56:19.074 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 14:56:19.074 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.events)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.events])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.events].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.events)
          - SQL table alias mapping - events0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Event)
                - SQL table alias mapping - events0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-02-28 14:56:19.075 [http-nio-8080-exec-3] CollectionLoader - Static select for collection edu.matc.entity.User.events: select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-28 14:56:19.177 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 14:56:19.177 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 14:56:19.178 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 14:56:19.200 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 14:56:19.201 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 14:56:19.203 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 14:56:19.203 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 14:56:19.219 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b232d46
[DEBUG] 2020-02-28 14:56:19.228 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: dcf61abf-f984-4920-aca1-972af431bea7 (<unnamed>)
[DEBUG] 2020-02-28 14:56:19.228 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 14:56:19.408 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 14:56:19.485 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-28 14:56:19.523 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@375c3f90
[DEBUG] 2020-02-28 14:56:19.622 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-02-28 14:56:19.652 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 14:56:19.680 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 14:56:19.715 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 14:56:19.738 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-28 14:56:19.739 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-28 14:56:19.740 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 14:56:19.740 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} USERS user0_ ) )
[DEBUG] 2020-02-28 14:56:19.763 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [USERS user0_]
[DEBUG] 2020-02-28 14:56:19.763 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 14:56:19.764 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_name as user_nam2_1_, user0_.user_password as user_pas3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}

[DEBUG] 2020-02-28 14:56:19.764 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 14:56:19.773 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-02-28 14:56:19.773 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.user_name as user_nam2_1_, user0_.user_password as user_pas3_1_ from USERS user0_
[DEBUG] 2020-02-28 14:56:19.773 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 14:56:19.798 [http-nio-8080-exec-3] SQL - select user0_.id as id1_1_, user0_.user_name as user_nam2_1_, user0_.user_password as user_pas3_1_ from USERS user0_
[DEBUG] 2020-02-28 14:56:19.928 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-02-28 14:56:19.933 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2020-02-28 14:56:19.963 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2020-02-28 14:56:19.963 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2020-02-28 14:56:19.964 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-02-28 14:56:19.965 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 14:56:19.965 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:19.982 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = test
[DEBUG] 2020-02-28 14:56:19.983 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:19.983 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userPassword` : value = test
[DEBUG] 2020-02-28 14:56:19.983 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = sue
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userPassword` : value = sueserson
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:19.984 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-02-28 14:56:19.993 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-28 14:56:19.994 [http-nio-8080-exec-3] SQL - select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-28 14:56:20.014 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-28 14:56:20.018 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:20.018 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-28 14:56:20.019 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:20.019 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 14:56:20.019 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-28 14:56:20.019 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 14:56:20.019 [http-nio-8080-exec-3] SQL - select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-28 14:56:20.021 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 14:56:20.021 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 14:56:20.025 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#2]
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `date` : value = 2020-02-29
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `endTime` : value = 10:30
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Meeting with person
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = This is my first example of an Event so I'm entering things just to test it.
[DEBUG] 2020-02-28 14:56:20.029 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:20.030 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `startTime` : value = 09:30
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#2]
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 14:56:20.031 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-28 14:56:20.035 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
