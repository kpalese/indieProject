[DEBUG] 2020-02-25 20:40:24.890 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-25 20:40:24.899 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-25 20:40:24.905 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-25 20:40:25.195 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-25 20:40:25.199 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-25 20:40:25.509 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-25 20:40:25.944 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-25 20:40:25.985 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-25 20:40:25.986 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-25 20:40:26.019 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-25 20:40:26.051 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2ff15f8c
[DEBUG] 2020-02-25 20:40:26.051 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2ff15f8c
[DEBUG] 2020-02-25 20:40:26.053 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ff15f8c
[DEBUG] 2020-02-25 20:40:26.054 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e3f79a2
[DEBUG] 2020-02-25 20:40:26.054 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67594471
[DEBUG] 2020-02-25 20:40:26.054 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@45e22def
[DEBUG] 2020-02-25 20:40:26.061 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@42d73c61
[DEBUG] 2020-02-25 20:40:26.061 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@42d73c61
[DEBUG] 2020-02-25 20:40:26.061 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@42d73c61
[DEBUG] 2020-02-25 20:40:26.062 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@23382f76
[DEBUG] 2020-02-25 20:40:26.065 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@23382f76
[DEBUG] 2020-02-25 20:40:26.065 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@23382f76
[DEBUG] 2020-02-25 20:40:26.067 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5b84f14
[DEBUG] 2020-02-25 20:40:26.067 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5b84f14
[DEBUG] 2020-02-25 20:40:26.069 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b84f14
[DEBUG] 2020-02-25 20:40:26.070 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@77e7246b
[DEBUG] 2020-02-25 20:40:26.071 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@77e7246b
[DEBUG] 2020-02-25 20:40:26.073 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77e7246b
[DEBUG] 2020-02-25 20:40:26.075 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4726927c
[DEBUG] 2020-02-25 20:40:26.075 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4726927c
[DEBUG] 2020-02-25 20:40:26.076 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4726927c
[DEBUG] 2020-02-25 20:40:26.077 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@10acd6
[DEBUG] 2020-02-25 20:40:26.080 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@10acd6
[DEBUG] 2020-02-25 20:40:26.080 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10acd6
[DEBUG] 2020-02-25 20:40:26.081 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2f651f93
[DEBUG] 2020-02-25 20:40:26.081 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2f651f93
[DEBUG] 2020-02-25 20:40:26.081 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f651f93
[DEBUG] 2020-02-25 20:40:26.082 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4a34e9f
[DEBUG] 2020-02-25 20:40:26.085 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4a34e9f
[DEBUG] 2020-02-25 20:40:26.087 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@351f2244
[DEBUG] 2020-02-25 20:40:26.087 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@351f2244
[DEBUG] 2020-02-25 20:40:26.087 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2009f9b0
[DEBUG] 2020-02-25 20:40:26.089 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2009f9b0
[DEBUG] 2020-02-25 20:40:26.090 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@211febf3
[DEBUG] 2020-02-25 20:40:26.091 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@588307f7
[DEBUG] 2020-02-25 20:40:26.094 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7acfb656
[DEBUG] 2020-02-25 20:40:26.095 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7acfb656
[DEBUG] 2020-02-25 20:40:26.095 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@52cb4f50
[DEBUG] 2020-02-25 20:40:26.095 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52cb4f50
[DEBUG] 2020-02-25 20:40:26.106 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@8a98f38
[DEBUG] 2020-02-25 20:40:26.107 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8a98f38
[DEBUG] 2020-02-25 20:40:26.108 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@38a1a26
[DEBUG] 2020-02-25 20:40:26.109 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@38a1a26
[DEBUG] 2020-02-25 20:40:26.111 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eb917d0
[DEBUG] 2020-02-25 20:40:26.113 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eb917d0
[DEBUG] 2020-02-25 20:40:26.114 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@12ffd1de
[DEBUG] 2020-02-25 20:40:26.114 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@12ffd1de
[DEBUG] 2020-02-25 20:40:26.116 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71d8cfe7
[DEBUG] 2020-02-25 20:40:26.120 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71d8cfe7
[DEBUG] 2020-02-25 20:40:26.122 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@54bca971
[DEBUG] 2020-02-25 20:40:26.122 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@54bca971
[DEBUG] 2020-02-25 20:40:26.126 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11b377c5
[DEBUG] 2020-02-25 20:40:26.126 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11b377c5
[DEBUG] 2020-02-25 20:40:26.127 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@37303f12
[DEBUG] 2020-02-25 20:40:26.130 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@37303f12
[DEBUG] 2020-02-25 20:40:26.131 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4dc8c0ea
[DEBUG] 2020-02-25 20:40:26.131 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dc8c0ea
[DEBUG] 2020-02-25 20:40:26.134 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@173797f0
[DEBUG] 2020-02-25 20:40:26.135 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@173797f0
[DEBUG] 2020-02-25 20:40:26.135 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@173797f0
[DEBUG] 2020-02-25 20:40:26.136 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ffaaaf0
[DEBUG] 2020-02-25 20:40:26.140 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1e141e42
[DEBUG] 2020-02-25 20:40:26.140 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e141e42
[DEBUG] 2020-02-25 20:40:26.140 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e141e42
[DEBUG] 2020-02-25 20:40:26.141 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3db663d0
[DEBUG] 2020-02-25 20:40:26.142 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5524b72f
[DEBUG] 2020-02-25 20:40:26.145 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5524b72f
[DEBUG] 2020-02-25 20:40:26.147 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e6f2bb5
[DEBUG] 2020-02-25 20:40:26.147 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e6f2bb5
[DEBUG] 2020-02-25 20:40:26.148 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6cd166b8
[DEBUG] 2020-02-25 20:40:26.148 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6cd166b8
[DEBUG] 2020-02-25 20:40:26.149 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3abfe845
[DEBUG] 2020-02-25 20:40:26.149 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3abfe845
[DEBUG] 2020-02-25 20:40:26.151 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24b4d544
[DEBUG] 2020-02-25 20:40:26.151 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24b4d544
[DEBUG] 2020-02-25 20:40:26.154 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@72725ee1
[DEBUG] 2020-02-25 20:40:26.155 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4893b344
[DEBUG] 2020-02-25 20:40:26.155 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4893b344
[DEBUG] 2020-02-25 20:40:26.155 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4893b344
[DEBUG] 2020-02-25 20:40:26.155 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@51b35e4e
[DEBUG] 2020-02-25 20:40:26.157 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@51b35e4e
[DEBUG] 2020-02-25 20:40:26.158 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@51b35e4e
[DEBUG] 2020-02-25 20:40:26.159 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@62db0521
[DEBUG] 2020-02-25 20:40:26.159 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@65753040
[DEBUG] 2020-02-25 20:40:26.159 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4e1459ea
[DEBUG] 2020-02-25 20:40:26.160 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4e1459ea
[DEBUG] 2020-02-25 20:40:26.160 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4e1459ea
[DEBUG] 2020-02-25 20:40:26.165 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57c47a9e
[DEBUG] 2020-02-25 20:40:26.166 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57c47a9e
[DEBUG] 2020-02-25 20:40:26.166 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57c47a9e
[DEBUG] 2020-02-25 20:40:26.166 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@61d84e08
[DEBUG] 2020-02-25 20:40:26.167 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@715d6168
[DEBUG] 2020-02-25 20:40:26.169 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6014a9ba
[DEBUG] 2020-02-25 20:40:26.169 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6014a9ba
[DEBUG] 2020-02-25 20:40:26.171 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f08fdce
[DEBUG] 2020-02-25 20:40:26.173 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5cb5bb88
[DEBUG] 2020-02-25 20:40:26.174 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5cb5bb88
[DEBUG] 2020-02-25 20:40:26.175 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67fc2aad
[DEBUG] 2020-02-25 20:40:26.176 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67fc2aad
[DEBUG] 2020-02-25 20:40:26.176 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@472698d
[DEBUG] 2020-02-25 20:40:26.182 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@39fa8ad2
[DEBUG] 2020-02-25 20:40:26.183 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@499ef98e
[DEBUG] 2020-02-25 20:40:26.189 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@764cba
[DEBUG] 2020-02-25 20:40:26.189 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@764cba
[DEBUG] 2020-02-25 20:40:26.190 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3872bc37
[DEBUG] 2020-02-25 20:40:26.190 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a87b51
[DEBUG] 2020-02-25 20:40:26.194 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12968227
[DEBUG] 2020-02-25 20:40:26.194 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@144ab54
[DEBUG] 2020-02-25 20:40:26.194 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2cfa2c4f
[DEBUG] 2020-02-25 20:40:26.194 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6ecab872
[DEBUG] 2020-02-25 20:40:26.194 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48eb9836
[DEBUG] 2020-02-25 20:40:26.194 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c518474
[DEBUG] 2020-02-25 20:40:26.242 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-25 20:40:26.243 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-25 20:40:26.245 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-25 20:40:26.246 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-25 20:40:26.246 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-25 20:40:26.247 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-25 20:40:26.250 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-25 20:40:26.252 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-25 20:40:26.255 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-25 20:40:26.255 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-25 20:40:26.256 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-25 20:40:26.256 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-25 20:40:26.256 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-25 20:40:26.257 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-25 20:40:26.269 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_indieProject
[INFO ] 2020-02-25 20:40:26.269 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-25 20:40:26.270 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-25 20:40:26.476 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-25 20:40:26.679 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-25 20:40:26.689 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-25 20:40:26.689 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-25 20:40:26.742 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-25 20:40:26.762 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-25 20:40:26.794 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-25 20:40:26.856 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-25 20:40:26.864 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34b9eb03] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43fda8d9]
[DEBUG] 2020-02-25 20:40:26.934 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-02-25 20:40:26.991 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-25 20:40:26.999 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-25 20:40:27.006 [main] EntityBinder - Bind entity edu.matc.entity.User on table USERS
[DEBUG] 2020-02-25 20:40:27.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.046 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-25 20:40:27.049 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-02-25 20:40:27.051 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-25 20:40:27.057 [main] PropertyBinder - Building property userId
[DEBUG] 2020-02-25 20:40:27.059 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-25 20:40:27.065 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-25 20:40:27.067 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=events, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.068 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=events_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.081 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='events_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-25 20:40:27.083 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-25 20:40:27.083 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-25 20:40:27.084 [main] CollectionBinder - Collection role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:27.089 [main] PropertyBinder - Building property events
[DEBUG] 2020-02-25 20:40:27.090 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.090 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-02-25 20:40:27.090 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userName]
[DEBUG] 2020-02-25 20:40:27.091 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-02-25 20:40:27.093 [main] PropertyBinder - Building property userName
[DEBUG] 2020-02-25 20:40:27.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.094 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-02-25 20:40:27.094 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userPassword]
[DEBUG] 2020-02-25 20:40:27.095 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-02-25 20:40:27.095 [main] PropertyBinder - Building property userPassword
[DEBUG] 2020-02-25 20:40:27.095 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Event
[DEBUG] 2020-02-25 20:40:27.096 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-25 20:40:27.096 [main] EntityBinder - Import with entity name Event
[DEBUG] 2020-02-25 20:40:27.096 [main] EntityBinder - Bind entity edu.matc.entity.Event on table EVENT
[DEBUG] 2020-02-25 20:40:27.101 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.102 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-25 20:40:27.102 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:id]
[DEBUG] 2020-02-25 20:40:27.102 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-25 20:40:27.102 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-25 20:40:27.103 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-25 20:40:27.103 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.103 [main] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2020-02-25 20:40:27.103 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:date]
[DEBUG] 2020-02-25 20:40:27.103 [main] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2020-02-25 20:40:27.103 [main] PropertyBinder - Building property date
[DEBUG] 2020-02-25 20:40:27.103 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.103 [main] PropertyBinder - MetadataSourceProcessor property endTime with lazy=false
[DEBUG] 2020-02-25 20:40:27.103 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:endTime]
[DEBUG] 2020-02-25 20:40:27.103 [main] SimpleValueBinder - building SimpleValue for endTime
[DEBUG] 2020-02-25 20:40:27.103 [main] PropertyBinder - Building property endTime
[DEBUG] 2020-02-25 20:40:27.105 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.105 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-25 20:40:27.105 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:name]
[DEBUG] 2020-02-25 20:40:27.105 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-25 20:40:27.105 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-25 20:40:27.106 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.106 [main] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2020-02-25 20:40:27.106 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:notes]
[DEBUG] 2020-02-25 20:40:27.106 [main] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2020-02-25 20:40:27.108 [main] PropertyBinder - Building property notes
[DEBUG] 2020-02-25 20:40:27.108 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.109 [main] PropertyBinder - MetadataSourceProcessor property startTime with lazy=false
[DEBUG] 2020-02-25 20:40:27.109 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Event:startTime]
[DEBUG] 2020-02-25 20:40:27.109 [main] SimpleValueBinder - building SimpleValue for startTime
[DEBUG] 2020-02-25 20:40:27.110 [main] PropertyBinder - Building property startTime
[DEBUG] 2020-02-25 20:40:27.111 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-25 20:40:27.111 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EVENT), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-25 20:40:27.114 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-25 20:40:27.119 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-25 20:40:27.119 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-02-25 20:40:27.119 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-02-25 20:40:27.121 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-25 20:40:27.121 [main] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2020-02-25 20:40:27.121 [main] SimpleValueBinder - Starting fillSimpleValue for endTime
[DEBUG] 2020-02-25 20:40:27.122 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-25 20:40:27.122 [main] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2020-02-25 20:40:27.122 [main] SimpleValueBinder - Starting fillSimpleValue for startTime
[DEBUG] 2020-02-25 20:40:27.126 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-25 20:40:27.126 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [event]
[DEBUG] 2020-02-25 20:40:27.126 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:27.127 [main] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.events through a foreign key
[DEBUG] 2020-02-25 20:40:27.131 [main] CollectionBinder - Mapping collection: edu.matc.entity.User.events -> EVENT
[DEBUG] 2020-02-25 20:40:27.133 [main] TableBinder - Retrieving property edu.matc.entity.Event.user
[DEBUG] 2020-02-25 20:40:27.136 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Event
[DEBUG] 2020-02-25 20:40:27.136 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-02-25 20:40:27.138 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-02-25 20:40:27.185 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-25 20:40:27.190 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-25 20:40:27.191 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-25 20:40:27.192 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-25 20:40:27.193 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-25 20:40:27.194 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-25 20:40:27.195 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-25 20:40:27.195 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-25 20:40:27.195 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-25 20:40:27.195 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-25 20:40:27.195 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-25 20:40:27.195 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-25 20:40:27.196 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-25 20:40:27.293 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-25 20:40:27.332 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-25 20:40:27.332 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 edu.matc.persistence.EventDaoTest,getAllSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_indieProject, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/IdeaProjects/indieproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16132f21, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_indieProject, java.class.version=55.0}
[DEBUG] 2020-02-25 20:40:27.373 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-25 20:40:27.374 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-25 20:40:27.376 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-25 20:40:27.376 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34b9eb03] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2693c618]
[DEBUG] 2020-02-25 20:40:27.508 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-25 20:40:27.509 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-25 20:40:27.531 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-02-25 20:40:27.531 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-02-25 20:40:27.815 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-25 20:40:27.815 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-25 20:40:27.815 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Event] is safe
[DEBUG] 2020-02-25 20:40:27.815 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Event
[DEBUG] 2020-02-25 20:40:27.890 [main] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:27.890 [main] AbstractCollectionPersister -  Row insert: update EVENT set user_id=? where id=?
[DEBUG] 2020-02-25 20:40:27.890 [main] AbstractCollectionPersister -  Row update: update EVENT set  where id=?
[DEBUG] 2020-02-25 20:40:27.890 [main] AbstractCollectionPersister -  Row delete: update EVENT set user_id=null where user_id=? and id=?
[DEBUG] 2020-02-25 20:40:27.890 [main] AbstractCollectionPersister -  One-shot delete: update EVENT set user_id=null where user_id=?
[DEBUG] 2020-02-25 20:40:27.892 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-02-25 20:40:27.892 [main] AbstractEntityPersister -  Version select: select id from USERS where id =?
[DEBUG] 2020-02-25 20:40:27.892 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_name as user_nam2_1_, user_.user_password as user_pas3_1_ from USERS user_ where user_.id=?
[DEBUG] 2020-02-25 20:40:27.893 [main] AbstractEntityPersister -  Insert 0: insert into USERS (user_name, user_password, id) values (?, ?, ?)
[DEBUG] 2020-02-25 20:40:27.893 [main] AbstractEntityPersister -  Update 0: update USERS set user_name=?, user_password=? where id=?
[DEBUG] 2020-02-25 20:40:27.893 [main] AbstractEntityPersister -  Delete 0: delete from USERS where id=?
[DEBUG] 2020-02-25 20:40:27.893 [main] AbstractEntityPersister -  Identity insert: insert into USERS (user_name, user_password) values (?, ?)
[DEBUG] 2020-02-25 20:40:27.910 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b61834]
[DEBUG] 2020-02-25 20:40:27.917 [main] MetamodelGraphWalker - Visiting attribute path : events
[DEBUG] 2020-02-25 20:40:27.920 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20349058]
[DEBUG] 2020-02-25 20:40:27.922 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f91fbda]
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Visiting attribute path : events.date
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Visiting attribute path : events.endTime
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Visiting attribute path : events.name
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Visiting attribute path : events.notes
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Visiting attribute path : events.startTime
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Visiting attribute path : events.user
[DEBUG] 2020-02-25 20:40:27.923 [main] MetamodelGraphWalker - Property path deemed to be circular : events.user
[DEBUG] 2020-02-25 20:40:27.924 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-25 20:40:27.924 [main] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2020-02-25 20:40:27.924 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-25 20:40:27.942 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-25 20:40:27.949 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:1>, path=edu.matc.entity.User.events)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:2>, path=edu.matc.entity.User.events.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(events)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.events)
                - SQL table alias mapping - events1_
                - alias suffix - 1_
                - suffixed key columns - {user_id7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Event)
                      - SQL table alias mapping - events1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-02-25 20:40:27.955 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:27.961 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d87d449]
[DEBUG] 2020-02-25 20:40:27.961 [main] MetamodelGraphWalker - Visiting attribute path : events
[DEBUG] 2020-02-25 20:40:27.962 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1df9186f]
[DEBUG] 2020-02-25 20:40:27.962 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@682e422c]
[DEBUG] 2020-02-25 20:40:27.962 [main] MetamodelGraphWalker - Visiting attribute path : events.date
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : events.endTime
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : events.name
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : events.notes
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : events.startTime
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : events.user
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Property path deemed to be circular : events.user
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-25 20:40:27.963 [main] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2020-02-25 20:40:27.963 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-25 20:40:27.963 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-25 20:40:27.963 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:1>, path=edu.matc.entity.User.events)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:2>, path=edu.matc.entity.User.events.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(events)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.events)
                - SQL table alias mapping - events1_
                - alias suffix - 1_
                - suffixed key columns - {user_id7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Event)
                      - SQL table alias mapping - events1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-02-25 20:40:27.963 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:27.978 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.id as id1_1_1_, user0_.user_name as user_nam2_1_1_, user0_.user_password as user_pas3_1_1_, events1_.user_id as user_id7_0_3_, events1_.id as id1_0_3_, events1_.id as id1_0_0_, events1_.date as date2_0_0_, events1_.end_time as end_time3_0_0_, events1_.name as name4_0_0_, events1_.notes as notes5_0_0_, events1_.start_time as start_ti6_0_0_, events1_.user_id as user_id7_0_0_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:27.979 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.id as id1_1_1_, user0_.user_name as user_nam2_1_1_, user0_.user_password as user_pas3_1_1_, events1_.user_id as user_id7_0_3_, events1_.id as id1_0_3_, events1_.id as id1_0_0_, events1_.date as date2_0_0_, events1_.end_time as end_time3_0_0_, events1_.name as name4_0_0_, events1_.notes as notes5_0_0_, events1_.start_time as start_ti6_0_0_, events1_.user_id as user_id7_0_0_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:27.979 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Event
[DEBUG] 2020-02-25 20:40:27.979 [main] AbstractEntityPersister -  Version select: select id from EVENT where id =?
[DEBUG] 2020-02-25 20:40:27.979 [main] AbstractEntityPersister -  Snapshot select: select event_.id, event_.date as date2_0_, event_.end_time as end_time3_0_, event_.name as name4_0_, event_.notes as notes5_0_, event_.start_time as start_ti6_0_, event_.user_id as user_id7_0_ from EVENT event_ where event_.id=?
[DEBUG] 2020-02-25 20:40:27.979 [main] AbstractEntityPersister -  Insert 0: insert into EVENT (date, end_time, name, notes, start_time, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-25 20:40:27.979 [main] AbstractEntityPersister -  Update 0: update EVENT set date=?, end_time=?, name=?, notes=?, start_time=?, user_id=? where id=?
[DEBUG] 2020-02-25 20:40:27.984 [main] AbstractEntityPersister -  Delete 0: delete from EVENT where id=?
[DEBUG] 2020-02-25 20:40:27.984 [main] AbstractEntityPersister -  Identity insert: insert into EVENT (date, end_time, name, notes, start_time, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-25 20:40:27.985 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ab408e]
[DEBUG] 2020-02-25 20:40:27.985 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-25 20:40:27.985 [main] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-25 20:40:27.985 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-25 20:40:27.985 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-25 20:40:27.985 [main] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-25 20:40:27.985 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-25 20:40:27.985 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b03788]
[DEBUG] 2020-02-25 20:40:27.986 [main] MetamodelGraphWalker - Visiting attribute path : user.events
[DEBUG] 2020-02-25 20:40:27.986 [main] MetamodelGraphWalker - Property path deemed to be circular : user.events
[DEBUG] 2020-02-25 20:40:27.986 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-25 20:40:27.986 [main] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2020-02-25 20:40:27.986 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-25 20:40:27.987 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-25 20:40:27.988 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Event)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Event, querySpaceUid=<gen:0>, path=edu.matc.entity.Event)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Event.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-02-25 20:40:27.989 [main] EntityLoader - Static select for entity edu.matc.entity.Event [NONE]: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_, user1_.id as id1_1_1_, user1_.user_name as user_nam2_1_1_, user1_.user_password as user_pas3_1_1_ from EVENT event0_ left outer join USERS user1_ on event0_.user_id=user1_.id where event0_.id=?
[DEBUG] 2020-02-25 20:40:27.989 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175c5c3a]
[DEBUG] 2020-02-25 20:40:27.989 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-25 20:40:27.990 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@451e2fa9]
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : user.events
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Property path deemed to be circular : user.events
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-25 20:40:27.990 [main] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2020-02-25 20:40:27.990 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-25 20:40:27.990 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-25 20:40:27.992 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Event)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Event, querySpaceUid=<gen:0>, path=edu.matc.entity.Event)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Event.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-02-25 20:40:27.992 [main] EntityLoader - Static select for entity edu.matc.entity.Event [READ]: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_, user1_.id as id1_1_1_, user1_.user_name as user_nam2_1_1_, user1_.user_password as user_pas3_1_1_ from EVENT event0_ left outer join USERS user1_ on event0_.user_id=user1_.id where event0_.id=?
[DEBUG] 2020-02-25 20:40:27.993 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Event: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_ from EVENT event0_ where event0_.id=?
[DEBUG] 2020-02-25 20:40:27.993 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Event: select event0_.id as id1_0_0_, event0_.date as date2_0_0_, event0_.end_time as end_time3_0_0_, event0_.name as name4_0_0_, event0_.notes as notes5_0_0_, event0_.start_time as start_ti6_0_0_, event0_.user_id as user_id7_0_0_ from EVENT event0_ where event0_.id=?
[DEBUG] 2020-02-25 20:40:27.997 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f4a1cac]
[DEBUG] 2020-02-25 20:40:27.998 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1a412e]
[DEBUG] 2020-02-25 20:40:27.999 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2020-02-25 20:40:28.000 [main] MetamodelGraphWalker - Visiting attribute path : endTime
[DEBUG] 2020-02-25 20:40:28.001 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-25 20:40:28.002 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2020-02-25 20:40:28.004 [main] MetamodelGraphWalker - Visiting attribute path : startTime
[DEBUG] 2020-02-25 20:40:28.005 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-25 20:40:28.005 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-25 20:40:28.005 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-25 20:40:28.006 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-25 20:40:28.006 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.events)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.events, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.events])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Event, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.events].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.events)
          - SQL table alias mapping - events0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Event)
                - SQL table alias mapping - events0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-02-25 20:40:28.007 [main] CollectionLoader - Static select for collection edu.matc.entity.User.events: select events0_.user_id as user_id7_0_0_, events0_.id as id1_0_0_, events0_.id as id1_0_1_, events0_.date as date2_0_1_, events0_.end_time as end_time3_0_1_, events0_.name as name4_0_1_, events0_.notes as notes5_0_1_, events0_.start_time as start_ti6_0_1_, events0_.user_id as user_id7_0_1_ from EVENT events0_ where events0_.user_id=?
[DEBUG] 2020-02-25 20:40:28.048 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-25 20:40:28.048 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-25 20:40:28.049 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-25 20:40:28.056 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-25 20:40:28.056 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-25 20:40:28.056 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-25 20:40:28.056 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-25 20:40:28.057 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3bbb8c16
[DEBUG] 2020-02-25 20:40:28.059 [main] SessionFactoryRegistry - Registering SessionFactory: 50ab2c7c-d237-4d04-b5fe-8b716ce7ac9f (<unnamed>)
[DEBUG] 2020-02-25 20:40:28.059 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-25 20:40:28.123 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-25 20:40:28.175 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Event as generatedAlias0
[DEBUG] 2020-02-25 20:40:28.229 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7f426ddd
[DEBUG] 2020-02-25 20:40:28.278 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Event as generatedAlias0
[DEBUG] 2020-02-25 20:40:28.286 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-25 20:40:28.321 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Event'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-25 20:40:28.337 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-25 20:40:28.355 [main] FromElement - FromClause{level=1} : edu.matc.entity.Event (generatedAlias0) -> event0_
[DEBUG] 2020-02-25 20:40:28.355 [main] FromReferenceNode - Resolved : generatedAlias0 -> event0_.id
[DEBUG] 2020-02-25 20:40:28.356 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-25 20:40:28.356 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} event0_.id ) ( FromClause{level=1} EVENT event0_ ) )
[DEBUG] 2020-02-25 20:40:28.387 [main] JoinProcessor - Using FROM fragment [EVENT event0_]
[DEBUG] 2020-02-25 20:40:28.387 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-25 20:40:28.387 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EVENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'event0_.id as id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Event, tableAlias=event0_}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.date as date2_0_, event0_.end_time as end_time3_0_, event0_.name as name4_0_, event0_.notes as notes5_0_, event0_.start_time as start_ti6_0_, event0_.user_id as user_id7_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EVENT event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=EVENT,tableAlias=event0_,origin=null,columns={,className=edu.matc.entity.Event}}

[DEBUG] 2020-02-25 20:40:28.388 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-25 20:40:28.397 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Event as generatedAlias0
[DEBUG] 2020-02-25 20:40:28.397 [main] QueryTranslatorImpl - SQL: select event0_.id as id1_0_, event0_.date as date2_0_, event0_.end_time as end_time3_0_, event0_.name as name4_0_, event0_.notes as notes5_0_, event0_.start_time as start_ti6_0_, event0_.user_id as user_id7_0_ from EVENT event0_
[DEBUG] 2020-02-25 20:40:28.397 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-25 20:40:28.412 [main] SQL - select event0_.id as id1_0_, event0_.date as date2_0_, event0_.end_time as end_time3_0_, event0_.name as name4_0_, event0_.notes as notes5_0_, event0_.start_time as start_ti6_0_, event0_.user_id as user_id7_0_ from EVENT event0_
[DEBUG] 2020-02-25 20:40:28.443 [main] Loader - Result set row: 0
[DEBUG] 2020-02-25 20:40:28.446 [main] Loader - Result row: EntityKey[edu.matc.entity.Event#1]
[DEBUG] 2020-02-25 20:40:28.473 [main] Loader - Result set row: 1
[DEBUG] 2020-02-25 20:40:28.474 [main] Loader - Result row: EntityKey[edu.matc.entity.Event#2]
[DEBUG] 2020-02-25 20:40:28.474 [main] Loader - Result set row: 2
[DEBUG] 2020-02-25 20:40:28.474 [main] Loader - Result row: EntityKey[edu.matc.entity.Event#3]
[DEBUG] 2020-02-25 20:40:28.475 [main] Loader - Result set row: 3
[DEBUG] 2020-02-25 20:40:28.475 [main] Loader - Result row: EntityKey[edu.matc.entity.Event#4]
[DEBUG] 2020-02-25 20:40:28.476 [main] Loader - Result set row: 4
[DEBUG] 2020-02-25 20:40:28.476 [main] Loader - Result row: EntityKey[edu.matc.entity.Event#5]
[DEBUG] 2020-02-25 20:40:28.477 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#1]
[DEBUG] 2020-02-25 20:40:28.480 [main] TwoPhaseLoad - Processing attribute `date` : value = 2020-02-29
[DEBUG] 2020-02-25 20:40:28.481 [main] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Processing attribute `endTime` : value = 11:00
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Processing attribute `name` : value = Meeting with Ann
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Processing attribute `notes` : value = This is a very important meeting. Don't forget to bring a pen.
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Processing attribute `startTime` : value = 09:30
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-25 20:40:28.482 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.490 [main] SQL - select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:28.498 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-25 20:40:28.501 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-25 20:40:28.502 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-25 20:40:28.512 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-02-25 20:40:28.512 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-25 20:40:28.514 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-25 20:40:28.514 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-02-25 20:40:28.514 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-25 20:40:28.517 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-25 20:40:28.517 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-02-25 20:40:28.518 [main] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-25 20:40:28.518 [main] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.518 [main] TwoPhaseLoad - Processing attribute `userName` : value = testUser1
[DEBUG] 2020-02-25 20:40:28.518 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.518 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = mypassword123
[DEBUG] 2020-02-25 20:40:28.518 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.519 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-02-25 20:40:28.519 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:28.520 [main] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#1]
[DEBUG] 2020-02-25 20:40:28.520 [main] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:28.522 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-25 20:40:28.523 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#1]
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#2]
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `date` : value = 2020-03-03
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `endTime` : value = null
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `name` : value = Dentist
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `notes` : value = Not sure how long this will last.
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `startTime` : value = 12:30
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#2]
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#3]
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `date` : value = 2020-03-03
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `endTime` : value = 20:00
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `name` : value = Fundraiser
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Processing attribute `startTime` : value = 16:00
[DEBUG] 2020-02-25 20:40:28.524 [main] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#3]
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#4]
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `date` : value = 2020-04-07
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `endTime` : value = null
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `name` : value = Doctor appt for J
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `notes` : value = Checkup
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `startTime` : value = 07:45
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2020-02-25 20:40:28.525 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.525 [main] SQL - select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:28.530 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-25 20:40:28.530 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-25 20:40:28.530 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#3]
[DEBUG] 2020-02-25 20:40:28.530 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#3]
[DEBUG] 2020-02-25 20:40:28.536 [main] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-25 20:40:28.536 [main] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.536 [main] TwoPhaseLoad - Processing attribute `userName` : value = WaltD
[DEBUG] 2020-02-25 20:40:28.537 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.537 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = 321xyz
[DEBUG] 2020-02-25 20:40:28.537 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.537 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#3]
[DEBUG] 2020-02-25 20:40:28.537 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:28.541 [main] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#3]
[DEBUG] 2020-02-25 20:40:28.541 [main] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:28.541 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-25 20:40:28.541 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#3
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#4]
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Event#5]
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Processing attribute `date` : value = 2020-04-06
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Processing attribute `endTime` : value = 10:30
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Attribute (`endTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Processing attribute `name` : value = Phone interview
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Processing attribute `notes` : value = They will call me
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Processing attribute `startTime` : value = 10:00
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Attribute (`startTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-25 20:40:28.542 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.542 [main] SQL - select user0_.id as id1_1_0_, user0_.user_name as user_nam2_1_0_, user0_.user_password as user_pas3_1_0_, events1_.user_id as user_id7_0_1_, events1_.id as id1_0_1_, events1_.id as id1_0_2_, events1_.date as date2_0_2_, events1_.end_time as end_time3_0_2_, events1_.name as name4_0_2_, events1_.notes as notes5_0_2_, events1_.start_time as start_ti6_0_2_, events1_.user_id as user_id7_0_2_ from USERS user0_ left outer join EVENT events1_ on user0_.id=events1_.user_id where user0_.id=?
[DEBUG] 2020-02-25 20:40:28.544 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-25 20:40:28.544 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-25 20:40:28.546 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Processing attribute `events` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Attribute (`events`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Processing attribute `userName` : value = Jane_Doe
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = welcome123
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-25 20:40:28.546 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-02-25 20:40:28.546 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:28.546 [main] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.events#2]
[DEBUG] 2020-02-25 20:40:28.546 [main] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.events
[DEBUG] 2020-02-25 20:40:28.546 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-25 20:40:28.546 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2020-02-25 20:40:28.547 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Event#5]
[DEBUG] 2020-02-25 20:40:28.548 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
